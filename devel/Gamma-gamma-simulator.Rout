
R version 3.4.4 (2018-03-15) -- "Someone to Lean On"
Copyright (C) 2018 The R Foundation for Statistical Computing
Platform: x86_64-pc-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

  Natural language support but running in an English locale

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> 
> 
> library(parallel)
> library(MASS)
> library(statmod)
> library(conformal.glm)
> library(conformalInference)
> library(HDInterval)
> source("simulator.R")
> set.seed(13)
> 
> 
> 
> ## inputs
> alpha <- 0.10
> shape <- 2
> beta <- c(1/8, 2)
> 
> 
> 
> ## n = 100, bins = 2
> B <- 50
> n <- 100
> bins <- 2
> system.time(gamgam100.2 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     print(j)
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
[1] 1
[1] 2
[1] 3
[1] 4
[1] 5
[1] 6
[1] 7
[1] 8
[1] 9
[1] 10
[1] 11
[1] 12
[1] 13
[1] 14
[1] 15
[1] 16
[1] 17
[1] 18
[1] 19
[1] 20
[1] 21
[1] 22
[1] 23
[1] 24
[1] 25
[1] 26
[1] 27
[1] 28
[1] 29
[1] 30
[1] 31
[1] 32
[1] 33
[1] 34
[1] 35
[1] 36
Error : no valid set of coefficients has been found: please supply starting values
In addition: There were 50 or more warnings (use warnings() to see the first 50)
[1] 37
[1] 38
[1] 39
[1] 40
[1] 41
[1] 42
[1] 43
[1] 44
[1] 45
[1] 46
[1] 47
[1] 48
[1] 49
[1] 50
   user  system elapsed 
838.524  13.510 309.547 
There were 28 warnings (use warnings() to see them)
> NAs <- length(which(is.na(gamgam100.2[, 1])))
> B <- B - NAs
> cbind(apply(gamgam100.2, 2, function(j) mean(j, na.rm = TRUE) ), 
+   apply(gamgam100.2, 2, function(j) sd(j, na.rm = TRUE)) / sqrt(B))
                           [,1]        [,2]
output.parametric1    0.9301743 0.001462084
output.parametric2    0.9279942 0.001107796
output.parametric3    3.1239127 0.074536312
output.nonparametric1 0.9072474 0.004137396
output.nonparametric2 0.9068983 0.001692252
output.nonparametric3 3.6898177 0.106462644
output.LS1            0.8336909 0.002986317
output.LS2            0.9963291 0.001267883
output.LS3            4.0540856 0.121304567
output.HD1            0.8937441 0.004497092
output.HD2            0.9087297 0.004529664
output.HD3            2.7853368 0.055311423
> 
> 
> ## n = 200, bins = 2
> B <- 50
> n <- 200
> bins <- 2
> system.time(gamgam200.2 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
    user   system  elapsed 
3367.426   19.322  966.328 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam200.2[, 1])))
> B <- B - NAs
> cbind(apply(gamgam200.2, 2, mean), 
+   apply(gamgam200.2, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9153395 0.0008644265
output.parametric2    0.9121195 0.0009764907
output.parametric3    2.8023274 0.0450511581
output.nonparametric1 0.9030093 0.0038571564
output.nonparametric2 0.9033040 0.0005105413
output.nonparametric3 3.5632542 0.0971001026
output.LS1            0.8150667 0.0026410415
output.LS2            0.9965640 0.0009906689
output.LS3            3.7651013 0.0782307737
output.HD1            0.9024150 0.0029085401
output.HD2            0.8976413 0.0036177152
output.HD3            2.7631959 0.0453956851
> 
> 
> ## n = 200, bins = 3
> B <- 50
> n <- 200
> bins <- 3
> system.time(gamgam200.3 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
    user   system  elapsed 
2388.790   18.702  787.243 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam200.3[, 1])))
> B <- B - NAs
> cbind(apply(gamgam200.3, 2, mean), 
+   apply(gamgam200.3, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9217240 0.0012204405
output.parametric2    0.9202316 0.0011078062
output.parametric3    0.9192919 0.0009449720
output.parametric4    2.9080748 0.0407095208
output.nonparametric1 0.8932019 0.0062080415
output.nonparametric2 0.9054695 0.0010859925
output.nonparametric3 0.9035633 0.0007714831
output.nonparametric4 3.1013329 0.0622122221
output.LS1            0.7336551 0.0038869699
output.LS2            0.9902220 0.0017898113
output.LS3            0.9940592 0.0011906929
output.LS4            3.7368060 0.0738469576
output.HD1            0.9114091 0.0039472870
output.HD2            0.8987995 0.0046088952
output.HD3            0.8983543 0.0044849298
output.HD4            2.7612142 0.0365249428
> 
> 
> ## n = 500, bins = 2
> B <- 50
> n <- 500
> bins <- 2
> system.time(gamgam500.2 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
     user    system   elapsed 
31775.813    26.729  7026.673 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam500.2[, 1])))
> B <- B - NAs
> cbind(apply(gamgam500.2, 2, mean), 
+   apply(gamgam500.2, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9060094 0.0004124849
output.parametric2    0.9047271 0.0003578915
output.parametric3    2.6276457 0.0283363855
output.nonparametric1 0.9001508 0.0014834476
output.nonparametric2 0.9012923 0.0001567740
output.nonparametric3 3.3848705 0.0416636892
output.LS1            0.8105202 0.0014455120
output.LS2            0.9943108 0.0007404576
output.LS3            3.6585730 0.0450674405
output.HD1            0.9020729 0.0020834015
output.HD2            0.8986120 0.0025625631
output.HD3            2.7204729 0.0244497450
> 
> 
> ## n = 500, bins = 3
> B <- 50
> n <- 500
> bins <- 3
> system.time(gamgam500.3 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
     user    system   elapsed 
17423.839    25.871  4298.825 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam500.3[, 1])))
> B <- B - NAs
> cbind(apply(gamgam500.3, 2, mean), 
+   apply(gamgam500.3, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9079152 0.0005322914
output.parametric2    0.9076652 0.0004103643
output.parametric3    0.9076389 0.0004169581
output.parametric4    2.7293332 0.0311686746
output.nonparametric1 0.8946326 0.0036118970
output.nonparametric2 0.9018043 0.0003187004
output.nonparametric3 0.9017385 0.0003630725
output.nonparametric4 3.0832755 0.0469683076
output.LS1            0.7216828 0.0021216421
output.LS2            0.9897103 0.0014986998
output.LS3            0.9939333 0.0007519169
output.LS4            3.6906986 0.0551200595
output.HD1            0.9002287 0.0028124801
output.HD2            0.9026180 0.0024627798
output.HD3            0.8959289 0.0022676432
output.HD4            2.7167238 0.0249251557
> 
> 
> ## n = 500, bins = 4
> B <- 50
> n <- 500
> bins <- 4
> system.time(gamgam500.4 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
     user    system   elapsed 
12541.999    26.723  3395.128 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam500.4[, 1])))
> B <- B - NAs
> cbind(apply(gamgam500.4, 2, mean), 
+   apply(gamgam500.4, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9121313 0.0008702041
output.parametric2    0.9106908 0.0004453270
output.parametric3    0.9108095 0.0005233682
output.parametric4    0.9108749 0.0004902439
output.parametric5    2.8552581 0.0314792564
output.nonparametric1 0.8946139 0.0043165884
output.nonparametric2 0.9026848 0.0011182100
output.nonparametric3 0.9024661 0.0004417118
output.nonparametric4 0.9025742 0.0004771610
output.nonparametric5 2.9825525 0.0410014332
output.LS1            0.6634811 0.0039404279
output.LS2            0.9576975 0.0026090385
output.LS3            0.9965421 0.0006396294
output.LS4            0.9927583 0.0010576495
output.LS5            3.6945922 0.0499431800
output.HD1            0.8953684 0.0032100104
output.HD2            0.8969997 0.0038285622
output.HD3            0.9012012 0.0034267520
output.HD4            0.9018497 0.0037207856
output.HD5            2.7527708 0.0278951458
> 
> 
> ## n = 500, bins = 5
> B <- 50
> n <- 500
> bins <- 5
> system.time(gamgam500.5 <- do.call(rbind, lapply(1:B, 
+   FUN = function(j){
+     unlist(simulator(n = n, alpha = alpha, beta = beta, 
+       bins = bins, family = "Gamma", 
+       link = "inverse", shape = shape, sd = NULL, 
+       confamily = "Gamma",
+       parametric = TRUE, nonparametric = TRUE, 
+       LS = TRUE, HD = TRUE, cores = 6))
+   })))
     user    system   elapsed 
10218.895    26.144  2967.132 
There were 50 or more warnings (use warnings() to see the first 50)
> NAs <- length(which(is.na(gamgam500.5[, 1])))
> B <- B - NAs
> cbind(apply(gamgam500.5, 2, mean), 
+   apply(gamgam500.5, 2, sd) / sqrt(B))
                           [,1]         [,2]
output.parametric1    0.9129322 0.0007123022
output.parametric2    0.9135604 0.0006108457
output.parametric3    0.9138187 0.0007128495
output.parametric4    0.9147766 0.0007631688
output.parametric5    0.9133063 0.0007147833
output.parametric6    2.8066560 0.0280810202
output.nonparametric1 0.8866823 0.0054507594
output.nonparametric2 0.9026789 0.0038171393
output.nonparametric3 0.9001398 0.0026595584
output.nonparametric4 0.9011899 0.0015910008
output.nonparametric5 0.9023432 0.0005959286
output.nonparametric6 2.7793366 0.0362482937
output.LS1            0.6323039 0.0047375707
output.LS2            0.9019872 0.0038638036
output.LS3            0.9926752 0.0013912184
output.LS4            0.9943169 0.0011016735
output.LS5            0.9899372 0.0013692602
output.LS6            3.6222943 0.0396590672
output.HD1            0.9046537 0.0030014464
output.HD2            0.9083469 0.0033711212
output.HD3            0.8968622 0.0043412231
output.HD4            0.9022648 0.0043508058
output.HD5            0.9025447 0.0038703375
output.HD6            2.7067463 0.0199683743
> 
> 
> 
> 
> 
> 
> 
> file <- paste("Gamma-gaama-output", collapse = "")
> file <- paste(file, "RData", sep = ".", collapse = "")
> save.image(file = file, ascii = TRUE)
> 
> 
> 
> proc.time()
     user    system   elapsed 
78555.772   157.482 19751.180 
